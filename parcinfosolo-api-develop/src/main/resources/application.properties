# Configuration de la bdd
spring.datasource.url=jdbc:mysql://localhost:3306/parcinfo?serverTimezone=UTC
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuration du pool de connexions
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# Configuration JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Configuration de la persistance
spring.jpa.properties.hibernate.cache.use_second_level_cache=true
spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
spring.jpa.properties.javax.persistence.sharedCache.mode=ENABLE_SELECTIVE
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.generate_statistics=true
spring.jpa.open-in-view=false

# Configuration du serveur
server.port=8080

# Configuration de la sécurité
# Le poivre est une chaîne de caractères aléatoire utilisée pour renforcer le hachage des mots de passe
# Il doit être stocké dans une variable d'environnement et ne jamais être commité dans le code
security.pepper=${SECURITY_PEPPER:}
# Clé de chiffrement pour Jasypt (chiffrement des propriétés sensibles)
jasypt.encryptor.password=${JASYPT_PASSWORD:}
# Clé secrète pour JWT
jwt.secret=${JWT_SECRET:}
# Durée de validité du token JWT (24h)
jwt.expiration=86400000

# Configuration de la session
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict
server.servlet.session.tracking-modes=cookie

# Configuration SSL/TLS
server.ssl.enabled=true
server.ssl.protocol=TLS
server.ssl.enabled-protocols=TLSv1.3
server.ssl.ciphers=TLS_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=${KEYSTORE_PASSWORD:changeit}

# Configuration de la sécurité des en-têtes
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,application/javascript,application/json
server.compression.min-response-size=1024

# Configuration des limites de requêtes
server.tomcat.max-http-form-post-size=2MB
spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=10MB

# Configuration OpenWeather API
openweather.api.key=${OPENWEATHER_API_KEY:}

# Configuration des endpoints API
spring.mvc.servlet.path=/api

# Configuration de la sécurité
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD:admin}

# Configuration OpenAPI/Swagger
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method 